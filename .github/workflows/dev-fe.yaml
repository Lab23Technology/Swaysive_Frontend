name: Sways-Dev-FE

on:
  workflow_dispatch:  # Enable manual triggering

permissions:
  contents: write

jobs:
  Build-and-Push:
    runs-on: ubuntu-latest # Use a common Linux runner
    outputs:
      image_tag: ${{ steps.get_tag.outputs.image_tag }}  # Define output for IMAGE_TAG
    steps:
      - uses: actions/checkout@v3  # Checkout the repository code
        with:
          ref: dev

      - name: Login to AWS ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          REGION: ${{ secrets.REGION }}
        run: |
          aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 881490115092.dkr.ecr.eu-west-2.amazonaws.com

      - name: Get Git Branch Name and Commit SHA
        id: get_tag
        run: |
          BRANCH_NAME=${GITHUB_REF##*/}
          COMMIT_SHA=$(git rev-parse --short HEAD)
          IMAGE_TAG="${BRANCH_NAME}-${COMMIT_SHA}"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT  # Set output variable

      - name: Write DEV .env file
        run: echo "${{ secrets.DEV_ENV_FILE }}" >  .env

      - name: Build Docker image for frontend with Dockerfile
        run: |
          docker build --tag 881490115092.dkr.ecr.eu-west-2.amazonaws.com/sways-dev-fe:${{ env.IMAGE_TAG }}  --file Dockerfile .

      - name: Push Docker image to ECR
        run: |
          docker push 881490115092.dkr.ecr.eu-west-2.amazonaws.com/sways-dev-fe:${{ env.IMAGE_TAG }}
          
      - name: Prune local Docker image
        run: |
          docker image rm 881490115092.dkr.ecr.eu-west-2.amazonaws.com/sways-dev-fe:${{ env.IMAGE_TAG }} || true
          docker system prune --force --all --filter "label=sways-dev-fe" || true        


  Deploy-To-Ec2:
    runs-on: ubuntu-latest
    needs: Build-and-Push
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/ubuntu/sways/fe
            ls
            IMAGE_TAG="${{ needs.Build-and-Push.outputs.image_tag }}"  # Use output from Build-and-Push job
            echo "IMAGE_TAG is $IMAGE_TAG"
            sed -i "s|image:.*881490115092.dkr.ecr.eu-west-2.amazonaws.com/sways-dev-fe:.*|image: '881490115092.dkr.ecr.eu-west-2.amazonaws.com/sways-dev-fe:${IMAGE_TAG}'|g" docker-compose.yml
            cat docker-compose.yml
            aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 881490115092.dkr.ecr.eu-west-2.amazonaws.com
          # docker-compose pull performance  
          # docker-compose up -d --no-deps --force-recreate performance 
          # docker image prune -a -f
            docker-compose pull sways-dev-fe  
            docker-compose up -d --no-deps --force-recreate sways-dev-fe
            docker image prune -a -f

            









# name: Sways-Dev-FE

# on:
#   workflow_dispatch:  # Enable manual triggering

# permissions:
#   contents: write

# jobs:
#   Build-and-Push:
#     runs-on: ubuntu-latest # Use a common Linux runner
#     outputs:
#       image_tag: ${{ steps.get_tag.outputs.image_tag }}  # Define output for IMAGE_TAG
#     steps:
#       - uses: actions/checkout@v3  # Checkout the repository code
#         with:
#           ref: dev

#       - name: Login to AWS ECR
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           REGION: ${{ secrets.REGION }}
#         run: |
#           aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 881490115092.dkr.ecr.eu-west-2.amazonaws.com

#       - name: Get Git Branch Name and Commit SHA
#         id: get_tag
#         run: |
#           BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})  # Get branch name correctly
#           COMMIT_SHA=$(git rev-parse --short HEAD)       # Get short commit SHA
#           IMAGE_TAG="${BRANCH_NAME}-${COMMIT_SHA}"
#           echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
#           echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT  # Ensure output is set
#           echo "Generated IMAGE_TAG=${IMAGE_TAG}"

#       - name: Write Dev .env file
#         run: echo "${{ secrets.DEV_ENV_FILE }}" >  .env

#       - name: Build Docker image for Frontend with Dockerfile
#         run: |
#           docker build --tag 881490115092.dkr.ecr.eu-west-2.amazonaws.com/sways-dev-fe:${{ env.IMAGE_TAG }} --file Dockerfile .

#       - name: Push Docker image to ECR
#         run: |
#           docker push 881490115092.dkr.ecr.eu-west-2.amazonaws.com/sways-dev-fe:${{ env.IMAGE_TAG }}
          
#       # - name: Prune local Docker image
#       #   run: |
#       #     docker image rm 881490115092.dkr.ecr.eu-west-2.amazonaws.com/sways-dev-fe:${{ env.IMAGE_TAG }} || true
#       #     docker system prune --force --all --filter "label=sways-dev-fe" || true    



#   Deploy-To-Ec2:
#     runs-on: ubuntu-latest
#     needs: Build-and-Push
#     steps:
#       - name: Deploy to Server
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USERNAME }}
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           port: ${{ secrets.SSH_PORT }}
#           script: |
#             cd /home/ubuntu/sways/fe
#             ls
#             IMAGE_TAG="${{ needs.Build-and-Push.outputs.image_tag }}"  # Use output from Build-and-Push job
#             echo "IMAGE_TAG is $IMAGE_TAG"
#             sed -i "s|image:.*881490115092.dkr.ecr.eu-west-2.amazonaws.com/sways-dev-fe:.*|image: '881490115092.dkr.ecr.eu-west-2.amazonaws.com/sways-dev-fe:${IMAGE_TAG}'|g" docker-compose.yml
#             cat docker-compose.yml
#             aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 881490115092.dkr.ecr.eu-west-2.amazonaws.com
#             docker-compose pull sways-dev-fe  
#             docker-compose up -d --no-deps --force-recreate sways-dev-fe
#             docker image prune -a -f
